export interface TripData {
  path: [number, number, number][];
  timestamps: number[];
}

export interface CityTrips {
  [cityName: string]: TripData[];
}

const schorndorfTrip = {
  type: "FeatureCollection" as const,
  features: [
    {
      type: "Feature" as const,
      properties: {
        duration: 660.392,
      },
      geometry: {
        coordinates: [
          [9.538225, 48.811215],
          [9.538225, 48.811215],
          [9.538248, 48.811294],
          [9.538253, 48.811397],
          [9.538205, 48.811467],
          [9.538111, 48.8115],
          [9.536905, 48.811491],
          [9.535565, 48.811488],
          [9.53531, 48.811514],
          [9.535074, 48.811539],
          [9.53508, 48.811165],
          [9.53509, 48.81045],
          [9.535095, 48.810087],
          [9.535096, 48.810057],
          [9.53517, 48.80796],
          [9.53516, 48.807874],
          [9.535132, 48.807837],
          [9.535089, 48.807802],
          [9.535035, 48.807779],
          [9.534985, 48.80777],
          [9.534912, 48.80776],
          [9.534728, 48.807735],
          [9.534207, 48.807681],
          [9.534158, 48.807676],
          [9.533975, 48.807663],
          [9.533821, 48.807653],
          [9.533768, 48.807649],
          [9.53333, 48.80762],
          [9.532853, 48.807613],
          [9.532543, 48.807606],
          [9.532544, 48.807727],
          [9.532546, 48.807873],
          [9.532551, 48.808239],
          [9.532561, 48.808662],
          [9.532563, 48.808706],
          [9.532512, 48.808824],
          [9.532457, 48.808935],
          [9.532382, 48.80899],
          [9.532245, 48.809036],
          [9.532092, 48.80905],
          [9.531923, 48.809029],
          [9.531813, 48.809002],
          [9.53173, 48.808939],
          [9.531875, 48.808665],
          [9.531942, 48.808529],
          [9.532063, 48.808236],
          [9.532137, 48.807946],
          [9.53217, 48.807767],
          [9.532184, 48.807538],
          [9.532176, 48.807359],
          [9.532172, 48.807279],
          [9.532099, 48.80663],
          [9.532094, 48.806365],
          [9.532205, 48.805883],
          [9.532211, 48.805845],
          [9.532141, 48.805834],
          [9.532082, 48.805807],
          [9.532042, 48.805767],
          [9.532029, 48.805728],
          [9.532034, 48.805688],
          [9.532057, 48.805652],
          [9.532096, 48.805622],
          [9.532163, 48.805598],
          [9.532238, 48.805592],
          [9.532311, 48.805607],
          [9.532365, 48.805566],
          [9.533479, 48.804673],
          [9.533611, 48.804558],
          [9.533602, 48.804513],
          [9.533614, 48.804469],
          [9.533645, 48.804429],
          [9.533693, 48.804397],
          [9.533761, 48.804374],
          [9.533836, 48.804367],
          [9.533885, 48.80437],
          [9.533934, 48.804383],
          [9.533979, 48.804405],
          [9.534016, 48.804432],
          [9.534045, 48.804472],
          [9.534055, 48.804516],
          [9.534045, 48.804561],
          [9.534216, 48.804593],
          [9.534329, 48.804607],
          [9.534439, 48.804611],
          [9.534684, 48.804595],
          [9.534821, 48.804582],
          [9.534964, 48.804568],
          [9.535247, 48.804572],
          [9.535244, 48.804656],
          [9.5352, 48.804849],
          [9.53513, 48.805159],
          [9.535027, 48.805619],
          [9.535006, 48.805692],
          [9.534827, 48.806407],
          [9.534779, 48.806498],
          [9.534676, 48.806584],
          [9.534836, 48.806641],
          [9.53538, 48.806684],
          [9.535807, 48.806698],
          [9.536228, 48.806677],
          [9.536274, 48.80667],
          [9.536923, 48.806604],
          [9.538085, 48.806471],
          [9.538319, 48.806465],
          [9.538357, 48.806464],
          [9.538589, 48.806482],
          [9.538679, 48.806133],
          [9.539002, 48.805062],
          [9.538896, 48.805043],
          [9.538064, 48.804895],
          [9.537645, 48.804822],
          [9.537253, 48.804768],
          [9.537085, 48.804744],
          [9.536947, 48.804728],
          [9.536895, 48.804722],
          [9.536098, 48.80464],
          [9.535623, 48.804602],
          [9.535247, 48.804572],
          [9.534964, 48.804568],
          [9.534821, 48.804582],
          [9.534684, 48.804595],
          [9.534439, 48.804611],
          [9.534329, 48.804607],
          [9.534216, 48.804593],
          [9.534045, 48.804561],
          [9.534016, 48.8046],
          [9.53397, 48.804632],
          [9.533913, 48.804655],
          [9.533848, 48.804665],
          [9.533781, 48.804662],
          [9.533675, 48.804689],
          [9.533609, 48.80472],
          [9.5333, 48.80496],
          [9.53325, 48.805],
          [9.533211, 48.80503],
          [9.532519, 48.805577],
          [9.532413, 48.805711],
          [9.532401, 48.805763],
          [9.532358, 48.805808],
          [9.53229, 48.805837],
          [9.532211, 48.805845],
          [9.532205, 48.805883],
          [9.532094, 48.806365],
          [9.532099, 48.80663],
          [9.532172, 48.807279],
          [9.532176, 48.807359],
          [9.532184, 48.807538],
          [9.53217, 48.807767],
          [9.532137, 48.807946],
          [9.532063, 48.808236],
          [9.531942, 48.808529],
          [9.531875, 48.808665],
          [9.531903, 48.808795],
          [9.53195, 48.808886],
          [9.532028, 48.808951],
          [9.532242, 48.808951],
          [9.532409, 48.808902],
          [9.532512, 48.808824],
          [9.532563, 48.808706],
          [9.532561, 48.808662],
          [9.532551, 48.808239],
          [9.532546, 48.807873],
          [9.532544, 48.807727],
          [9.532543, 48.807606],
          [9.532853, 48.807613],
          [9.53333, 48.80762],
          [9.533768, 48.807649],
          [9.533821, 48.807653],
          [9.533975, 48.807663],
          [9.534158, 48.807676],
          [9.534207, 48.807681],
          [9.534728, 48.807735],
          [9.534912, 48.80776],
          [9.534985, 48.80777],
          [9.535035, 48.807779],
          [9.535089, 48.807802],
          [9.535132, 48.807837],
          [9.53516, 48.807874],
          [9.53517, 48.80796],
          [9.535096, 48.810057],
          [9.535095, 48.810087],
          [9.53509, 48.81045],
          [9.53508, 48.811165],
          [9.535074, 48.811539],
          [9.53531, 48.811514],
          [9.535565, 48.811488],
          [9.536905, 48.811491],
          [9.538111, 48.8115],
          [9.538205, 48.811467],
          [9.538253, 48.811397],
          [9.538248, 48.811294],
          [9.538225, 48.811215],
        ],
        type: "LineString" as const,
      },
    }
  ]
};

// Convert GeoJSON to TripsLayer format
function convertGeoJSONToTrips(geoJSON: typeof schorndorfTrip): TripData[] {
  const baseTrips: TripData[] = [];
  
  geoJSON.features.forEach((feature) => {
    const coordinates = feature.geometry.coordinates as [number, number][];
    const baseDuration = feature.properties.duration;
    
    // Create 3 variations of the same trip
    const variations = [
      { speedMultiplier: 1.0, timeOffset: 0 },        // Normal speed, no offset
      { speedMultiplier: 0.85, timeOffset: 150 },     // Slightly slower, 150s offset
      { speedMultiplier: 1.15, timeOffset: 300 }      // Slightly faster, 300s offset
    ];
    
    variations.forEach(({ speedMultiplier, timeOffset }) => {
      const duration = baseDuration / speedMultiplier;
      const timeStep = duration / (coordinates.length - 1);
      
      baseTrips.push({
        path: coordinates.map((coord) => [coord[0], coord[1], 0] as [number, number, number]),
        timestamps: coordinates.map((_, i) => (i * timeStep) + timeOffset)
      });
    });
  });
  
  return baseTrips;
}

export const cityTripsData: CityTrips = {
  'Schorndorf': convertGeoJSONToTrips(schorndorfTrip),
  // Add more cities here as needed
  'Berlin': [],
  'Stuttgart': [],
  'New York City': []
};